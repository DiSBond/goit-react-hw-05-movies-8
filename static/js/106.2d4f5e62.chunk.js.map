{"version":3,"file":"static/js/106.2d4f5e62.chunk.js","mappings":"oNAMMA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,kFAyEhB,UAjEqB,SAAC,GAAgB,IAAD,IAAbE,EAAa,EAAbA,OACtB,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAETC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCH,EADnC,oBACiDN,EADjD,oBAGFU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC3BJ,MAAK,SAAAO,GAAM,OAAId,EAAgBc,QACjC,CAACjB,EAAQM,IAEZ,IAMMY,EAAY,oBAAGd,EAASe,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAC7C,OACE,4BACE,6BACE,SAACvB,EAAD,CAAYwB,GAAIH,EAAhB,wBAEF,4BACE,gBAAKI,IAbS,WAClB,GAAIpB,EAAaqB,YACf,MAAM,kCAAN,OAAyCrB,EAAaqB,aAW1CA,GAAeC,IAAI,MAC7B,wBAAKtB,EAAauB,MAAQvB,EAAauB,MAAQvB,EAAawB,QAC5D,wCAAgBxB,EAAayB,iBAC7B,sCACA,uBAAIzB,EAAa0B,YACjB,oCACA,wBACG1B,EAAa2B,QACZ3B,EAAa2B,OAAOC,KAAI,SAAAC,GACtB,OAAO,wBAAoBA,EAAML,MAAjBK,EAAMzB,aAI9B,4BACE,oDACA,2BACE,yBACE,SAACT,EAAD,CAAYwB,GAAG,OAAOF,MAAO,CAAEC,KAAMF,GAArC,qBAIF,yBACE,SAACrB,EAAD,CAAYwB,GAAG,UAAUF,MAAO,CAAEC,KAAMF,GAAxC,8BAMN,0BACE,SAAC,EAAAc,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD","sources":["components/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { useState, useEffect } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Suspense } from 'react';\n\nconst StyledLink = styled(NavLink)`\n  color: black;\n\n  &.active {\n    color: orange;\n  }\n`;\n\nconst MovieDetails = ({ apiKey }) => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const location = useLocation();\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\n    )\n      .then(response => response.json())\n      .catch(error => console.log(error))\n      .then(result => setMovieDetails(result));\n  }, [apiKey, id]);\n\n  const poster_path = () => {\n    if (movieDetails.poster_path) {\n      return `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`;\n    }\n  };\n\n  const backLonkHref = location.state?.from ?? '/';\n  return (\n    <div>\n      <button>\n        <StyledLink to={backLonkHref}>Go back</StyledLink>\n      </button>\n      <div>\n        <img src={poster_path()} alt=\"\" />\n        <h1>{movieDetails.title ? movieDetails.title : movieDetails.name}</h1>\n        <p>User Score: {movieDetails.vote_average}</p>\n        <h2>Overview</h2>\n        <p>{movieDetails.overview}</p>\n        <h3>Genres</h3>\n        <ul>\n          {movieDetails.genres &&\n            movieDetails.genres.map(genre => {\n              return <li key={genre.id}>{genre.name}</li>;\n            })}\n        </ul>\n      </div>\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <StyledLink to=\"cast\" state={{ from: backLonkHref }}>\n              Cast\n            </StyledLink>\n          </li>\n          <li>\n            <StyledLink to=\"reviews\" state={{ from: backLonkHref }}>\n              Reviews\n            </StyledLink>\n          </li>\n        </ul>\n      </div>\n      <div>\n        <Suspense fallback={null}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = { apiKey: propTypes.string };\n"],"names":["StyledLink","styled","NavLink","apiKey","useState","movieDetails","setMovieDetails","location","useLocation","id","useParams","useEffect","fetch","then","response","json","catch","error","console","log","result","backLonkHref","state","from","to","src","poster_path","alt","title","name","vote_average","overview","genres","map","genre","Suspense","fallback"],"sourceRoot":""}